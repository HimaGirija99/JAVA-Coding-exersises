Quick Sort - Problem Statement
Send Feedback
Sort an array A using Quick Sort.
Change in the input array itself. So no need to return or print anything.


Input format :
Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)
Output format :
Array elements in increasing order (separated by space)
Constraints :
1 <= n <= 10^3
Sample Input 1 :
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8
Sample Input 2 :
5
1 5 2 7 3
Sample Output 2 :
1 2 3 5 7 


	public class Solution {
		public static int partition(int[] input, int sI, int eI) {
        	int pivotelement = input[sI];
        	int count =0;
        	for(int i=sI+1;i<=eI;i++){
            	if(input[i]<pivotelement){
                	count++;
            	}
        	}
        	int temp = input[sI+count];
        	input[sI+count]=pivotelement;
        	input[sI]=temp;
        	int i = sI;
        	int j = eI;
        	while(i<j){
            	if(input[i]<pivotelement){
                	i++;
            	}else if (input[j]>=pivotelement){
                	j--;
            	}
            	else{
                	temp = input[i];
                	input[i]=input[j];
                	input[j]=temp;
                	i++;
                	j--;
            	}
        	}
        	return sI+count;			
		}
        public static void quickSort(int []a, int sI, int eI){
        	if(sI>=eI){
            	return;
        	}
        	int pivotIndex = partition(a,sI,eI);
        	quickSort(a,sI,pivotIndex-1);
        	quickSort(a,pivotIndex+1,eI);
    	}
	
		public static void quickSort(int[] input) {
			quickSort(input, 0, input.length - 1);
		}
	
	}
