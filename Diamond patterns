Q3. Half Diamond



Given an integer N, print the corresponding Half Diamond pattern with 2*N - 1 rows.

For example if N = 5 then pattern will be like:

* 
**
***
****
*****
****
***
**
*
NOTE: There should be no spaces after any * .



Problem Constraints

2 <= N <= 100



Input Format

First and only line of input contains a single integer N.



Output Format

Output the Half Diamond pattern corresponding to the given N.



Example Input

Input 1:

 2
Input 2:

 3


Example Output

Output 1:

 * 
 **
 *
Output 2:

 *
 **
 ***
 **
 *


Example Explanation

 Print the pattern as described.
 
 Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        for (int i = 1; i <= N; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            System.out.println();
        }for (int i = N+1; i <= 2*N-1; i++){
            for (int j = 1; j<=2*N-i; j++) {
                System.out.print("*");
            }
            System.out.println();
        }

        

For example if N = 5 then pattern will be like:

* * * * * 
 * * * * 
  * * * 
   * *    
    * 
NOTE: There should be exactly one extra space after each * for each row.



Problem Constraints
2 <= N <= 100



Input Format
First and only line of input contains a single integer N.



Output Format
Output the Inverted Full Pyramid pattern corresponding to the given N.



Example Input
Input 1:

 2
Input 2:

 3
Input 3:

 4


Example Output
Output 1:

* * 
 *  
Output 2:

* * * 
 * *  
  * 
Output 3:

* * * * 
 * * *  
  * *
   *
   


Example Explanation
 Print the pattern as described.

 import java.lang.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        for (int i = 1; i <= N; i++) {
            for (int j = 0; j < i-1; j++) {
                System.out.print(" ");
            }
            for (int j = 1; j <=N-i+1; j++) {
                System.out.print("*"+" ");
            }
            System.out.println();
        }
        
    }
}
